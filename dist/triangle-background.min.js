function Triangle(){this.colour=this.getRandomColour(),this.nodes=[],this.center={x:0,y:0},this.hasHighlight=!1}function TriangleNode(t,i,e){this.x=t,this.y=i,this.direction=e}function TriangleNodeManager(t,i,e,n){this.spacing=i,this.nodes=[new TriangleNode(t.x,t.y,0)],this.queue=[0],this.triangles=[],this.ctx=e,this.bounds=n,this.calculatePositions(),this.drawableTriangles=this.triangles,this.drawTriangles(),this.drawableTriangles=[]}function TriangleBackground(t,i){switch(typeof t){case"string":this.containerElement=document.querySelector(t);break;case"object":this.containerElement=t;break;default:return void console.log("TriangleBackground: First argument should be a CSS selector or a DOM element")}i&&(i.color&&(Triangle.prototype.availableColours=i.color),i.mouseHoverHighlight&&(i.mouseHoverHighlight.color&&(Triangle.prototype.highlightColour=i.mouseHoverHighlight.color),i.mouseHoverHighlight.radius&&(Triangle.prototype.highlightRadius=i.mouseHoverHighlight.radius))),this.triangleSize=50,this.initFrame(),this.initTriangles(),window.addEventListener("resize",this.resize.bind(this)),i&&i.mouseHoverHighlight===!1||window.addEventListener("mousemove",this.mouseMove.bind(this))}Triangle.prototype.availableColours=["#dddddd","#cccccc","#bbbbbb","#aaaaaa"],Triangle.prototype.highlightColour="#ffffff",Triangle.prototype.highlightRadius=100,Triangle.prototype.getRandomColour=function(){function t(t,i){return Math.round(Math.random()*(i-t))+t}return this.availableColours[t(0,this.availableColours.length-1)]},Triangle.prototype.draw=function(t,i){t.fillStyle=this.getColour(i),t.beginPath(),this.nodes.map(function(i){t.lineTo(i.x,i.y)}.bind(this)),t.fill(),t.closePath()},Triangle.prototype.getColour=function(t){var i=0;return"undefined"!=typeof t.x&&"undefined"!=typeof t.y&&(i=this.getMouseDistance(this.center,t),i=i>this.highlightRadius?this.highlightRadius:i,i=this.highlightRadius-i),this.hasHighlight=i>0,this.changeColour(this.colour,this.highlightColour,i)},Triangle.prototype.getMouseDistance=function(t,i){return Math.sqrt(Math.pow(Math.abs(t.x-i.x),2)+Math.pow(Math.abs(t.y-i.y),2))},Triangle.prototype.changeColour=function(t,i,e){var n=this.hexToRGB(t),r=this.hexToRGB(i),o={r:(r.r-n.r)*(e/this.highlightRadius),g:(r.g-n.g)*(e/this.highlightRadius),b:(r.b-n.b)*(e/this.highlightRadius)};return this.RGBToHex({r:Math.round(n.r+o.r),g:Math.round(n.g+o.g),b:Math.round(n.b+o.b)})},Triangle.prototype.hexToRGB=function(t){var i=parseInt(t.substr(1,2),16),e=parseInt(t.substr(3,2),16),n=parseInt(t.substr(5,2),16);return{r:i,g:e,b:n}},Triangle.prototype.RGBToHex=function(t){function i(t){var i=t.toString(16);return 1===i.length?"0"+i:i}return"#"+i(t.r)+i(t.g)+i(t.b)},Triangle.prototype.calculateCenter=function(){var t=0,i=0,e=0,n=0;this.nodes&&(this.nodes.map(function(r){t=t?Math.max(t,r.x):r.x,e=e?Math.max(e,r.y):r.y,i=i?Math.min(i,r.x):r.x,n=n?Math.min(n,r.y):r.y}),this.center.x=i+(t-i)/2,this.center.y=n+(e-n)/2)},TriangleNode.prototype.extrapolateTriangles=function(t){for(var i=[],e=0;6>e;e++){var n=new Triangle;n.nodes.push(this),n.nodes.push(new TriangleNode(this.x+Math.cos(this.direction)*t,this.y+Math.sin(this.direction)*t,this.direction)),this.rotate(),n.nodes.push(new TriangleNode(this.x+Math.cos(this.direction)*t,this.y+Math.sin(this.direction)*t,this.direction)),n.calculateCenter(),i.push(n)}return i},TriangleNode.prototype.rotate=function(){var t=60,i=t*(Math.PI/180);this.direction+=i,this.direction>360*(Math.PI/180)&&(this.direction-=360*(Math.PI/180))},TriangleNodeManager.prototype.restart=function(t){this.nodes=[new TriangleNode(t.x,t.y,0)],this.queue=[0],this.triangles=[],this.calculatePositions(),this.drawableTriangles=this.triangles},TriangleNodeManager.prototype.calculatePositions=function(){for(;this.queue.length>0;){var t=this.nodes[this.queue.shift()],i=t.extrapolateTriangles(this.spacing);i.map(function(t){var i=t.nodes[1];this.findNode(i)||this.isOutOfBounds(i)||(this.nodes.push(i),this.queue.push(this.nodes.indexOf(i)))}.bind(this)),i=i.filter(function(t){return!this.findTriangle(t)}.bind(this)),this.triangles=this.triangles.concat(i)}},TriangleNodeManager.prototype.drawTriangles=function(){this.drawableTriangles.map(function(t){t.draw(this.ctx,{x:this.mouseX,y:this.mouseY})}.bind(this)),window.requestAnimationFrame(this.drawTriangles.bind(this))},TriangleNodeManager.prototype.findNode=function(t){var i=this.nodes.filter(function(i){return Math.round(i.x)===Math.round(t.x)&&Math.round(i.y)===Math.round(t.y)});return i.length},TriangleNodeManager.prototype.isOutOfBounds=function(t){return t.x>this.bounds.width||t.x<0||t.y>this.bounds.height||t.y<0?!0:!1},TriangleNodeManager.prototype.findTriangle=function(t){var i=this.triangles.filter(function(i){return Math.round(i.center.x)===Math.round(t.center.x)&&Math.round(i.center.y)===Math.round(t.center.y)});return i.length},TriangleNodeManager.prototype.setMousePosition=function(t,i){this.mouseX=t,this.mouseY=i,this.drawableTriangles=this.getDrawableTriangles()},TriangleNodeManager.prototype.getDrawableTriangles=function(){return this.triangles.filter(function(t){var i=Math.abs(t.center.x-this.mouseX)<Triangle.prototype.highlightRadius&&Math.abs(t.center.y-this.mouseY)<Triangle.prototype.highlightRadius,e=!i&&t.hasHighlight;return i||e}.bind(this))},TriangleBackground.prototype.initFrame=function(){this.canvasElement=document.createElement("canvas"),this.drawingContext=this.canvasElement.getContext("2d"),this.containerElement.appendChild(this.canvasElement),this.containerElement.style.position="fixed",this.containerElement.style.width="100%",this.containerElement.style.height="100%",this.calculateSize()},TriangleBackground.prototype.calculateSize=function(){this.width=this.containerElement.clientWidth,this.height=this.containerElement.clientHeight,this.canvasElement.width=this.width,this.canvasElement.height=this.height},TriangleBackground.prototype.resize=function(){this.calculateSize(),this.restartTriangles()},TriangleBackground.prototype.mouseMove=function(t){this.nodeManager&&this.nodeManager.setMousePosition(t.clientX,t.clientY)},TriangleBackground.prototype.initTriangles=function(){var t={x:this.width/2,y:this.height/2};this.nodeManager=new TriangleNodeManager(t,this.triangleSize,this.drawingContext,{width:this.width,height:this.height})},TriangleBackground.prototype.restartTriangles=function(){var t={x:this.width/2,y:this.height/2};this.nodeManager.restart(t)},"object"==typeof module&&"object"==typeof module.exports&&(module.exports=TriangleBackground);